import org.springframework.boot.gradle.tasks.bundling.BootJar

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.palantir.docker'
}

group = 'br.ufu.gustavodejesus'
version = '0.0.3-SNAPSHOT'

java {
    sourceCompatibility = '19'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def jarTask = tasks.findByName("bootJar") as BootJar ?: tasks.getByName("jar", Jar)
def archivePath = jarTask.archiveFileName.get()
def dockerFilePath = "${projectDir.path}/Dockerfile"
def projectName = "invoicexadmin/busca_fipe"
def fullName = "${projectName}:${project.version}"
def dockerBuildArgs = ["JAR_FILE": archivePath]

tasks.docker {
    inputs.file(dockerFilePath)
    dependsOn()
}

docker {
    name fullName
    tag "latest", fullName
    pull true
    setDockerfile file(dockerFilePath)
    files jarTask.outputs
    buildArgs dockerBuildArgs
}